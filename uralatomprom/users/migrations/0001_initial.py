# Generated by Django 4.1.10 on 2023-09-21 22:54

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'Пользователь с таким именем уже есть'}, help_text='Обязательное поле. Не более 150 символов. Только буквы и цифры', max_length=150, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]*$', 'Только латинские буквы и цифры')], verbose_name='Логин')),
                ('is_speaker', models.BooleanField(null=True, verbose_name='С докладом')),
                ('full_name', models.CharField(max_length=256, null=True, verbose_name='ФИО (полностью)')),
                ('organisation', models.CharField(blank=True, max_length=256, null=True, verbose_name='Название организации')),
                ('phone', models.CharField(blank=True, max_length=256, null=True, verbose_name='Телефон участника')),
                ('abstract', models.FileField(blank=True, help_text='<a href="/abstracts/template.doc">Шаблон тезисов доклада</a> Название файла должно быть в виде "IvanovAV.doc". Тезисы можно загрузить позднее через форму редактирования профиля участника.', upload_to='abstracts', verbose_name='Тезисы доклада')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='E-mail: ')),
                ('give_personal_data', models.BooleanField(default=True, help_text='Я прочитал и принимаю <a href="/abstracts/personal.doc">условия обработки персональных данных.</a>', verbose_name='Согласие на обработку персональных данных')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
